package com.github.kostia.workspace_service.ProjectTests;

import com.github.kostia.workspace_service.project.Project;
import com.github.kostia.workspace_service.project.ProjectRepo;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.data.jdbc.DataJdbcTest;

import java.util.Optional;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.jupiter.api.Assertions.assertTrue;

@DataJdbcTest
class ProjectRepoTest {

    @Autowired
    private ProjectRepo projectRepo;

    @Test
    void saveAndFindByCompartmentId() {
        // Arrange
        Project project = new Project(
                null, // id will be autogenerated if your DB supports it
                123, // compartmentId
                456, // tenantId
                "display name",
                "short name",
                "description",
                "ACTIVE",
                "CONFIGURED",
                "stores",
                "groups",
                true,
                false,
                1L
        );

        project = projectRepo.save(project);

        // Act
        Optional<Project> found = projectRepo.findByCompartmentId(123);

        // Assert
        assertThat(found).isPresent();
        assertThat(found.get().getDisplayName()).isEqualTo("display name");
        assertThat(found.get().getLifecycleState()).isEqualTo("ACTIVE");
        assertThat(found.get().getVersion()).isEqualTo(1L);
    }

    @Test
    void deleteById() {
        // Arrange
        Project project = new Project(
                null,
                123,
                456,
                "display name",
                "short name",
                "description",
                "ACTIVE",
                "CONFIGURED",
                "stores",
                "groups",
                true,
                false,
                1L
        );
        project = projectRepo.save(project);

        // Act
        projectRepo.deleteById(project.getId());

        // Assert
        Optional<Project> maybeProjectAfterDeletion = projectRepo.findById(project.getId());
        assertTrue(maybeProjectAfterDeletion.isEmpty());
    }
}
